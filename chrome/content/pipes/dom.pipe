dom.prototype = new pipe();
dom.prototype.Constructor = dom();

function dom() 
{
}

dom.extract = function(doc)
{
    var res = '';
    //max_treelen = 20;
    //max_clientrect = 10;

    function rec(node, paren)
    {
        // extract features
        r = [];
        if ((node.nodeName == "#text") &&
            node.data.replace( /^\s+/g, "").replace( /\s+$/g, "").replace( /\n/g, " ").replace(/  +/g, " "))
        {
            // node / parent properties (5x)
            var pnn = node.parentNode.parentNode;
            // distance from root node
            r[r.length] = paren.length;
            // number of neighbouring nodes
            r[r.length] = pnn.childNodes.length;
            // text length
            r[r.length] = node.data.length / 100;
            // node type (=html tag)
            r[r.length] = (pnn.nodeType - 5) / 10;
            // ratio text characters / html characters
            r[r.length] = node.data.length / pnn.innerHTML.length;
            
            // generic document properties (8x)
            // number of contained elements by type
            r[r.length] = styleSheetsl;
            r[r.length] = linksl;
            r[r.length] = imagesl;
            r[r.length] = formsl;
            r[r.length] = embedsl;
            r[r.length] = anchorsl;
            // title length
            r[r.length] = titlel;
            // total html source character count
            r[r.length] = innerHTMLl;

            res += r.join(' ') + "\n";
        } 
        // recurse to children
        var nparen = paren.slice();
        if (node.nodeType)
            nparen[nparen.length] = node.nodeType;

        for (child in node.childNodes)
        {
            cnode = node.childNodes[child];
            if (cnode.nodeName != "SCRIPT")
                rec(cnode, nparen);
        }
    };

    // generic document properties (8x)
    // get these values /here/, i.e. outside the recursion to avoid 
    // repetitive recalculations
    d = doc.parentNode.parentNode;
    // number of contained elements by type
    styleSheetsl = d.styleSheets.length != null ? d.styleSheets.length/5 : 0;
    linksl = d.links.length != null ? d.links.length/10 : 0;
    imagesl = d.images.length != null ? d.images.length/10 : 0;
    formsl = d.forms.length != null ? d.forms.length : 0;
    embedsl = d.embeds.length != null ? d.embeds.length : 0;
    anchorsl = d.anchors.length != null ? d.anchors.length/10 : 0;
    // title length
    titlel = d.title.length != null ? d.title.length/50 : 0;
    // total html source character count
    innerHTMLl = doc.innerHTML.length / 10000;

    rec(doc.QueryInterface(Components.interfaces.nsIDOMNSElement), []);

    return res;
}


// vim: filetype=javascript
